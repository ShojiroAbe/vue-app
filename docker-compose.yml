version: '3.9' # docker-composeのバージョン
services: 
  frontend: # サービス名
    build: # Dockerfileの設定
      context: . # Dockerfileを置いているディレクトリ
      dockerfile: ./frontend/Dockerfile # Dockerfileのファイル名
    container_name: frontend
    working_dir: /app/frontend # Dockerの中でのfrontendのことを指す
    volumes: 
    # データの永続化（ローカルの変更とDockerコンテナ内のfrontendを連携、同期しているという意味）
      # ボリュームのマウント先の変更
      - ./frontend:/app/frontend
    # ホスト側のポート：コンテナのポート
    ports:
      - "5173:5173"
    # https://zenn.dev/ayuu/articles/84b482c37bea9a


  backend: 
    build:
      context: .
      dockerfile: ./backend/bff/Dockerfile
    container_name: backend
    working_dir: /app/bff
    volumes:
      - ./backend/bff:/app/bff
    ports:
      - "3000:3000"
  
  # MySQLのimage(Dockerファイル)は作らず、ここから直接コンテナの作成を行う
  api:
    image: mysql:8.0.28
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: demo
      # MYSQL_USER:
      # MYSQL_PASSWORD:
      # MYSQL_ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./backend/api/my.cnf:/mysql/my.cnf
    ports:
      - "3306:3306"
  # https://zenn.dev/ryo7/articles/create-mysql-on-docker
  # https://qiita.com/nanakenashi/items/180941699dc7ba9d0922
  # https://qiita.com/CyberMergina/items/f889519e6be19c46f5f4
